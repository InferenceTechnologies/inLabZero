% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfGraphics.R
\name{histPlotPar}
\alias{histPlotPar}
\title{Histogram Plot Parameters}
\usage{
histPlotPar(...)
}
\arguments{
\item{...}{Numeric, character or function. 

Root parameters:
\itemize{ 
  \item{ \code{colors} }{ Color schemes. }
  \item{ \code{pbr} }{ Default number of histogram cells for "hist" splits per chart type (default: 60 (hist), 30 (beside)). } 
  \item{ \code{axes} }{ Axes parameters. }
  \item{ \code{space} }{ Space between bars (default: 0 (hist)). }
  \item{ \code{legend} }{ Legend parameters. }
}

\code{colors} parameters:
\itemize{
  \item{ \code{colors.zLevel} }{ Color scheme for categorical variables. }
  \item{ \code{colors.zBr} }{ Color scheme for numerical variables. }
  \item{ \code{colors.border} }{ Bar border color per chart type (default: 0.9 (hist, dens), \code{NA} (beside)). }
  \item{ \code{colors.alpha} }{ Alpha setting per chart type (default: 0.5 (hist, dens), 0.8 (beside)). }
}

\code{axes} parameters:
\itemize{
  \item{ \code{axes.x.ticks} }{ Number of x axis ticks (default: 5). }
  \item{ \code{axes.x.signif} }{ Significant digits in x axis (default: 3). }
  \item{ \code{axes.y.type} }{ Type of y axis: "perc" for percent of total and "count" for counts (default: "perc"). }
  \item{ \code{axes.y.lab} }{ Label of y axis per chart type. }
}

\code{legend} parameters:
\itemize{
  \item{ \code{legend.pos} }{ Legend position (default: "topright"). }
  \item{ \code{legend.title} }{ Legend title per chart type (default: "Overlay" (hist, dens), "Beside" (beside)). }
  \item{ \code{legend.signif} }{ Number of significant digits (default: 3). }
}}
}
\description{
Gets, sets and reloads default visual parameters of histPlot.
}
\details{
Use parameter names to get values, use assignment to set parameter
values and use keyword \code{default} to load default values.
}
\examples{

data(pcy)

# Plot first variable from the group
histPlot(pcy, 1)

\dontrun{# Various ways to input variables for plotting 
# Use console for browsing
var <- 10
histPlot(pcy, 1, c(1,5), c(1:5), c(var), c("PARAM03"), 1:5, 8:-1, PARAM01, PARAM08:last)
}
# Select numerical z variable with input by index
histPlot(pcy, UPYield, z=5)
# Select categorical z variable with input by name
histPlot(pcy, 1, z="part", zLevel=c("PART1", "PART2"))
# Special keyword "all" for all levels
histPlot(pcy, 1, z="part", zLevel="all")
# Select date type z variable
histPlot(pcy, 1, z="pcStartDate", zBr=as.POSIXct(c("2015/10/01", "2016/01/01", "2016/10/01")))

# Filter outliers
histPlot(pcy, UPYield, outlier=10, z=5, zOutlier=3)

# Break numerical z variables into intervals
# No break - single color mode
histPlot(pcy, 1, z=NULL)
# No break
histPlot(pcy, 1, zBr=1)
# Breaking by median, mean and yieldHeat method
histPlot(pcy, 1, zBrMethod="median")
histPlot(pcy, 1, zBrMethod="mean")
histPlot(pcy, 1, zBr=5, zBrMethod="yieldHeat")
# br keywords seq, min, median, mean and max together with values
histPlot(pcy, 10, chart="hist", zBr=c("min", "seq(20, 80, length.out=3)", "max"))
# Equivalent for zBrMethod="yieldHeat" using zBr keywords
histPlot(pcy, 1, zBr=c("seq(min, median, length.out=5)", "max"))

# Categorical x variable
histPlot(pcy, wafer, xLevel="all", z=NULL)

# Hide legend
histPlot(pcy, 1, showLegend=FALSE)

# Print all visual parameters
histPlotPar()
# Get value of a visual parameter
histPlotPar(colors.zBr)
# Set breaking colors to red and green, transparency to zero and legend position to 
# top left
histPlotPar(colors.zBr=c("red", "green"), colors.alpha.density=1, legend.pos="topleft")

# Reload default visual parameters
histPlotPar(default)
}
