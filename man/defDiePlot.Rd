% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfGraphics.R
\name{defDiePlot}
\alias{defDiePlot}
\title{Defects Die Heatmap}
\usage{
defDiePlot(
  obj,
  bins = "all",
  balance = NULL,
  main = NULL,
  res = c(300, 300),
  mode = "smooth",
  smoothType = "Gauss",
  smoothParam = c(1, 2),
  smoothFun = sum
)
}
\arguments{
\item{obj}{\code{semiFrame} object representing the defects dataset.}

\item{bins}{Integer. Specifies which bins to use. For all available bins use keyword "all"
(default: "all").}

\item{balance}{Numeric. Balances defects in failed dice with defects in good dice. Sampled number of defects in good dice is defined as total number of defects in bad dice multiplied by \code{balance} (default: \code{NULL}).}

\item{main}{Character. Main title.}

\item{res}{Integer. Defines resolution of the heatmap (default: \code{c(300, 300)}).}

\item{mode}{Character. Defines mode: "smooth" (default) for neighborhood smoothing or "raw" for raw point display.}

\item{smoothType}{Character. Indicates the type of smoothing filter to be used: "circle",  "Gauss" (default) or "rectangle".}

\item{smoothParam}{Numeric. If \code{type=circle}, the radius of the circle (in units
of the CRS). If \code{type=rectangle} the dimension of the
rectangle (one or two numbers). If \code{type=Gauss} the size of
\code{sigma}, and optionally another number to determine the size of
the matrix used (default: \code{c(1,2)}).}

\item{smoothFun}{Function. Applied to calculate focal values for the smoothing neighborhood of
focal cells using the matrix of weights defined by \code{smoothType} and \code{smoothParam} (default: sum).}
}
\value{
Plot.
}
\description{
Plots a defects die heatmap
}
\examples{

# Defects dataset
data(def)
     
# Defect maps dataset
data(dem)
  
# Defects per die dataset
ded <- defDie(wbm, dem, def=def)

# Create a dataset which pairs the information on particul bin and corresponding defects.
defb <- transfer(ded, def, c("bin", "fail"), key="lotWaferStepDie")

# Create defects per die heatmap
defDiePlot(defb[step=="STEP1"], res=c(400,400), smoothParam=c(0.5,1), main="STEP1, All bins")

}
