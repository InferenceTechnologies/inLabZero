% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfGraphics.R
\name{boxPlotPar}
\alias{boxPlotPar}
\title{Box Plot Parameters}
\usage{
boxPlotPar(...)
}
\arguments{
\item{...}{Numeric, character or function. 

Root parameters:
\itemize{ 
  \item{ \code{colors } }{ Color schemes. } 
  \item{ \code{boxWex} }{ Relative width of boxes (default: 0.5). } 
  \item{ \code{varWidth} }{ Variable width of boxes proportional to 
   the square-roots of the number of observations in the groups (default: \code{FALSE}). } 
  \item{ \code{xSignif} }{ Number of significant digits for x axis values (default: 3). } 
  \item{ \code{mar} }{ Chart margins. } 
  \item{ \code{axis} }{ Axis parameters. }
  \item{ \code{legend} }{ Legend parameters. }
}
\code{colors} parameters:
\itemize{
  \item{ colors.zLevel }{ Color scheme for categorical variables. }
  \item{ colors.zBr }{ Color scheme for numerical variables. }
  \item{ colors.border }{ Boxplot border color. }
}
\code{axis} parameters:
\itemize{
  \item{ axis.x.las }{ Parallel (=0) or perpendicular(=2) labels to x axis (default: 0). }
  \item{ axis.x.cex }{ Annotation magnification of x axis (default: 1). }
  \item{ axis.x.line }{ Distance from x axis (default: \code{NA}).  }
}
\code{legend} parameters:
\itemize{
  \item{ legend.pos }{ Legend position (default: "topright"). }
  \item{ legend.signif }{ Number of significant digits (default: 3). }
}}
}
\description{
Gets, sets and reloads default visual parameters of boxPlot.
}
\details{
Use parameter names to get values, use assignment to set parameter
values and use keyword \code{default} to load default values.
}
\examples{

data(pcy)

# Plot a numerical vs a categorical variable from the group
boxPlot(pcy, siteid, 1, xLevel="all")

# Plot a numerical vs a numerical variable from the group with default breaking
boxPlot(pcy, 2, 3)

\dontrun{# Various ways to input variables for plotting, first variable is used for x axis 
# Use console for browsing
var <- 10
boxPlot(pcy, 2, c(2,5), c(2:5), c(var), c("PARAM03"), 2:5, 8:-1, PARAM02, PARAM08:last)
}
# Break numerical x variable into arbitrary intervals
boxPlot(pcy, 2, 3, xBr=10)

# Use z variable for boxes coloring
boxPlot(pcy, 2, 3, z="ProbeYield", zBr=10)

# Filter outliers
boxPlot(pcy, wafer, UPYield, outlier=3)

# Print all visual parameters
boxPlotPar()
# Get chart margins
boxPlotPar(mar)
# Set relative width of the boxes
boxPlotPar(boxWex=0.2)
# Boxes width proportional to number of observations in the groups
boxPlotPar(varWidth=TRUE)
# Set legend position to top left
boxPlotPar(legend.pos="topleft")
# Reload default visual parameters
boxPlotPar(default)
}
