% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfGraphics.R
\name{partialPlot}
\alias{partialPlot}
\title{Partial Dependence Plot}
\usage{
partialPlot(
  obj,
  ...,
  method = "model",
  xInput = 5,
  xNarrow = NULL,
  xCenterFun = median,
  xSizeRatio = ifelse(is.null(xNarrow), 0.5, xNarrow),
  y = "ProbeYield",
  z = NULL,
  zBr = 2,
  zBrMethod = "median",
  zLevel = NULL,
  zCenter = NULL,
  zNarrow = NULL,
  zCenterFun = median,
  zSizeRatio = ifelse(is.null(zNarrow), 0.5, zNarrow),
  data = "last",
  positiveIdx = 2,
  classProb = TRUE,
  estimateFun = mean,
  confLevel = 0.95,
  bootR = 999,
  main = NULL,
  numMain = TRUE,
  showLegend = TRUE,
  autoNorm = TRUE,
  useDataType = sfUseDataType,
  col = NULL,
  core = 1
)
}
\arguments{
\item{obj}{\code{semiTable} or \code{semiFrame} object.}

\item{...}{Data columns to be used as \code{x} variable. Each column can be entered in following forms:
\itemize{
  \item{ integers } { Specify column indexes in the column group given by
    \code{useDataType} parameter. }
  \item{ characters }{ Specify column names. Both character vectors or strings without quotes
    can be used. } 
}}

\item{method}{Character. Partial plot method:
\itemize{
  \item{ "model" }{ Previously trained model is used for averaging through the data at points specified by \code{xInput} (default). }
  \item{ "data" }{ Adjusted distribution shifting is used for evaluating estimates at distribution's centers specified by \code{xInput}. }
  \item{ "modelForest" }{ Same as "model" method, except non-parallelized function from the \code{randomForest} package is used for averaging. }
}}

\item{xInput}{Numeric. Input points for estimates corresponding to \code{x} variable. If single value
is provided (\code{length(xInput)==1}) variable's range is divided by this number (default: 5). Depending on \code{method} these inputs are:
\itemize{
  \item{ for "model": }{ points. }
  \item{ for "data": }{ distribution centers. }
}}

\item{xNarrow}{Numeric. Narrowing coefficient for \code{x} variable's distribution.}

\item{xCenterFun}{Character. Center calculation function for \code{x} variable's  distribution. Examples: \code{median}, \code{mean}.}

\item{xSizeRatio}{Numeric. Proportion of the data used for sampling \code{x} variable's distribution.}

\item{y}{Character. Response column to estimate (default: "ProbeYield").}

\item{z}{Vector. Specifies column for \code{z} axis. This column can be broken into intervals 
using \code{zBr} and \code{zBrMethod} for numerical variables and using \code{zLevel} for 
categorical variables. Subsets of data column corresponding to \code{z} column breaks are 
then plotted with different colors. Input methods:
\itemize{
  \item{ integers } { Specify column indexes in the column group given by
    \code{useDataType} parameter. }
  \item{ characters }{ Specify column names. } 
} 
First found match is used when multivalued vector is provided.}

\item{zBr}{Vector. Breaks of a numeric \code{z} column, works in conjunction with \code{zBrMethod} 
setting. Single integer value determines number of breaks. Vector of \code{length>1} can be numerical,
character or POSIXct and represents interval breaking points. Special character values "min", "mean",
"median", "max" and "seq" can be used.}

\item{zBrMethod}{Character. Relevant for numeric \code{z} columns, works in conjunction with \code{zBr} setting. 
Split methods:
\itemize{
  \item{ "median" }{ Breaks \code{z} column with \code{median}. }
  \item{ "mean" }{ Breaks \code{z} column with \code{mean}. }
  \item{ "thr" }{ Breaks \code{z} column with threshold value specified by \code{zBr}. }
  \item{ "yieldHeat" }{ Corresponds to \code{zBr=c("seq(min, median, length.out=brValue)", "max")}, 
   where \code{brValue} is the value specified by \code{zBr}. }
  \item{ "linear" }{ Breaks \code{z} column into equidistant intervals, number of splits is given
   by \code{zBr}. }
  \item{ "hist" }{ Breaks \code{z} column using graphic's \code{hist} function. Values
   are passed to hist's \code{breaks} parameter using \code{zBr}. }
}}

\item{zLevel}{Vector. Non-null value indicates a categorical \code{z} column. Specifies which categories to use
for split. Use special value "all" to include all categories.}

\item{zCenter}{Numeric. Centers of \code{z} variable's shifted distribution.}

\item{zNarrow}{Numeric. Narrowing coefficient for \code{z} variable's distribution.}

\item{zCenterFun}{Character. Center calculation function for \code{z} variable's  distribution. Examples: \code{median}, \code{mean}.}

\item{zSizeRatio}{Numeric. Proportion of the data used for sampling \code{z} variable's distribution.}

\item{data}{Character. A \code{semiFrame} object can store models on both parametric and map data. Choose
\itemize{
  \item{ "par" }{ for model on parameters. }
  \item{ "map" }{ for model on maps. }
  \item{ "last" }{ for last modified model. }
}}

\item{positiveIdx}{Numeric. Determines whether maximum or minimum is assigned
to the green color. Possible values 1 or 2 (default: 2).}

\item{classProb}{Logical. Relevant for \code{method="model"}. If TRUE, computes probability from logit value (default: \code{TRUE}).}

\item{estimateFun}{Character. Estimate function for \code{method="data"} (default: \code{mean}).}

\item{confLevel}{Numeric. Confidence interval settings (default: 0.95).}

\item{bootR}{Numeric. The number of bootstrap replicates (default: 999).}

\item{main}{Character. Main title.}

\item{numMain}{Logical. When \code{TRUE} index of plotted column within corresponding \code{useDataType}
is included into the main title.}

\item{showLegend}{Logical. When \code{TRUE}, legend is shown (default: \code{TRUE}).}

\item{autoNorm}{Logical. If \code{TRUE}, data prior normalization is restored for plotting.}

\item{useDataType}{Character. Specifies \code{obj} column group for integer column indexing.
First found match is used when multivalued vector is provided. 
See \code{\link{dataType}} for more information on data types.}

\item{col}{Character. Direct column input using character column names or integer column indices (default: \code{NULL}).}

\item{core}{Integer. Specifies number of cores for parallel computation.}
}
\value{
Plot.
}
\description{
Plots response's partial dependence by either sampling from the data after variable's distribution 
adjustments or by using a model for averaging through the data.
}
\examples{

data(pcy)

# Train Random forest classification
pcy <- model(pcy, type="class", model="forest", splitRatio=1, modelFormula="ProbeYield~.")

# Partial dependence method="model", default settings
partialPlot(pcy, PARAM01)

# Select numerical z variable with input by index
partialPlot(pcy, 1, z=5)
# Select categorical z variable with input by name
partialPlot(pcy, 1, z="part", zLevel=c("PART1", "PART2"))
# Special keyword "all" for all levels
partialPlot(pcy, 1, z="part", zLevel="all")
# Select date type z variable
partialPlot(pcy, 1, 10, z="pcStartDate", zBr=as.POSIXct(c("2015/10/01", "2016/01/01", "2016/10/01")))

# Break numerical z variable into intervals
partialPlot(pcy, 1, method="model", z="ProbeYield", zBr=3, zBrMethod="yieldHeat")

# Partial dependence method="data"
# Yield estimates after PARAM01's distribution shifting and narrowing by 50\%
partialPlot(pcy, PARAM01, method="data", xInput=20:24, xNarrow=0.5)
# Yield estimates depending on z variable's distribution adjustments
partialPlot(pcy, PARAM01, method="data", xInput=5 ,xNarrow=0.5, z=5, zCenter=c(70,71), zNarrow=0.8)

# Print all visual parameters
partialPlotPar()
# Get confidence interval's color
partialPlotPar(colors.confInterv)
# Set legend position to bottomleft
partialPlotPar(legend.pos="bottomleft")

# Reload default visual parameters
partialPlotPar(default)
}
