% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfModel.R
\name{prune}
\alias{prune}
\title{CART Pruning}
\usage{
prune(obj, ..., data = "last")
}
\arguments{
\item{obj}{\code{semiTable} or \code{semiFrame} object.}

\item{...}{Parameters passed to \code{rpart::prune}, e.g. \code{cp} - the complexity 
parameter to which object will be trimmed.}

\item{data}{Character. A \code{semiFrame} object can store models on both parametric and map data. Choose
\itemize{
  \item{ "par" }{ for model on parameters. }
  \item{ "map" }{ for model on maps. }
  \item{ "last" }{ for last modified model. }
}}
}
\value{
Copy of the \code{obj} object with pruned CART model.
}
\description{
Relevant for a \code{semiTable} or \code{semiFrame} object carrying
   a CART model. The function determines a nested sequence of subtrees of the supplied 
   model by recursively snipping off the least important splits,
   based on the complexity parameter - \code{cp}.
}
\details{
For more information on cost-complexity object pruning see \code{?rpart::prune}.
}
\examples{

data(pcy)

# Train CART classification of 'ProbeYield' (median response split by default) on all parameters
pcy2 <- model(pcy, type="class", model="cart", splitRatio=1, formula="ProbeYield~.", cp=0.03)

# Default decision tree plot
modelPlot(pcy2)

# Get summary with complexity parameter information
summary(pcy2, special="cp")

# Prune CART classification using the complexity parameter
pcy2 <- prune(pcy2, cp=0.05)

# Plot pruned CART classification 
modelPlot(pcy2)

}
