% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfGraphics.R
\name{partialPlotPar}
\alias{partialPlotPar}
\title{Partial Plot Parameters}
\usage{
partialPlotPar(...)
}
\arguments{
\item{...}{Numeric, character or function. 

Root parameters
\itemize{
 \item{ \code{colors} }{ Color schemes. }
 \item{ \code{lwd} }{ Line width (default: 1.5). }
 \item{ \code{legend} }{ Legend parameters. }
}
\code{colors} parameters:
\itemize{
  \item{ \code{colors.confInterv} }{ Confidence interval area color (default: "#5252521A"). }
  \item{ \code{colors.zLevel} }{ Color scheme for categorical variables. }
  \item{ \code{colors.zBr} }{ Color scheme for numerical variables. }
}
\code{legend} parameters:
\itemize{
  \item{ \code{legend.pos} }{ Legend position (default: "topright"). }
  \item{ \code{legend.signif} }{ Number of significant digits (default: 3). }
  \item{ \code{legend.lty} }{ Lines type of the legend (default: 0). }
  \item{ \code{legend.lwd} }{ Lines width of the legend (default: 1). }
  \item{ \code{legend.cex} }{ Annotation magnification of the legend (default: 0.9). }
  \item{ \code{legend.bty} }{ Type of box that is drawn around the legend (default: "n"). }
  \item{ \code{legend.segLen} }{ The length of lines drawn to illustrate ‘lty’ and/or ‘lwd’
          (in units of character widths) (default: "0"). }
  \item{ \code{legend.pch} }{ Points symbols of the legend (default: 15). }
  \item{ \code{legend.ptCex} }{ A numeric determining the size of the exemplary vertex in the legend box (default: 1.8). }
}}
}
\description{
Gets, sets and reloads default visual parameters of partialPlot.
}
\details{
Use parameter names to get values, use assignment to set parameter
values and use keyword \code{default} to load default values.
}
\examples{

data(pcy)

# Train Random forest classification
pcy <- model(pcy, type="class", model="forest", splitRatio=1, modelFormula="ProbeYield~.")

# Partial dependence method="model", default settings
partialPlot(pcy, PARAM01)

# Select numerical z variable with input by index
partialPlot(pcy, 1, z=5)
# Select categorical z variable with input by name
partialPlot(pcy, 1, z="part", zLevel=c("PART1", "PART2"))
# Special keyword "all" for all levels
partialPlot(pcy, 1, z="part", zLevel="all")
# Select date type z variable
partialPlot(pcy, 1, 10, z="pcStartDate", zBr=as.POSIXct(c("2015/10/01", "2016/01/01", "2016/10/01")))

# Break numerical z variable into intervals
partialPlot(pcy, 1, method="model", z="ProbeYield", zBr=3, zBrMethod="yieldHeat")

# Partial dependence method="data"
# Yield estimates after PARAM01's distribution shifting and narrowing by 50\%
partialPlot(pcy, PARAM01, method="data", xInput=20:24, xNarrow=0.5)
# Yield estimates depending on z variable's distribution adjustments
partialPlot(pcy, PARAM01, method="data", xInput=5 ,xNarrow=0.5, z=5, zCenter=c(70,71), zNarrow=0.8)

# Print all visual parameters
partialPlotPar()
# Get confidence interval's color
partialPlotPar(colors.confInterv)
# Set legend position to bottomleft
partialPlotPar(legend.pos="bottomleft")

# Reload default visual parameters
partialPlotPar(default)
}
